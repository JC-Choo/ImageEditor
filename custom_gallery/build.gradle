plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "dev.chu.custom_gallery"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // 참고 https://developer.android.com/kotlin/ktx?hl=ko
    implementation "androidx.core:core-ktx:$core_ktx_version"               // Android 프레임워크의 일부인 일반 라이브러리에 확장 프로그램을 제공
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"

    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$test_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$test_espresso_version"

    implementation "androidx.activity:activity-ktx:$activity_ktx_version"       // 액티비티 API 를 단순화한 것들을 적용하기 위한 라이브러리.
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"       // 프래그먼트 API 를 단순화한 것들을 적용하기 위한 라이브러리.
    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"  // viewModelScope 함수를 제공하는 라이브러리. 코루틴과 함께 사용학 위해 적용.
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"    // Lifecycle 객체의 LifecycleScope 을 정의하기 위한 라이브러리. lifecycle.coroutineScope or lifecycleOwner.lifecycleScope 속성 사용 시 Lifecycle 의 CoroutineScope 에 액세스 할 수 있도록 하기 위해 적용.
    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // DI
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_android_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_android_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_android_processor_version"
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$dagger_assisted_inject"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$dagger_assisted_inject"

    // Design
    implementation "com.google.android.material:material:$material_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_compiler_version"

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
}