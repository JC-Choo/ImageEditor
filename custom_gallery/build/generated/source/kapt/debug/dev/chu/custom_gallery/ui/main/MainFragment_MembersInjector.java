// Generated by Dagger (https://dagger.dev).
package dev.chu.custom_gallery.ui.main;

import androidx.lifecycle.ViewModelProvider;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import dev.chu.core.di.SharedViewModelProvider;
import dev.chu.core.di.ViewModelInject;
import dev.chu.custom_gallery.ui.ToolbarViewModel;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainFragment_MembersInjector implements MembersInjector<MainFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  private final Provider<MainViewModel> viewModelProvider;

  private final Provider<ViewModelProvider> sharedViewModelProvider;

  private final Provider<ToolbarViewModel> toolbarVMProvider;

  public MainFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<MainViewModel> viewModelProvider,
      Provider<ViewModelProvider> sharedViewModelProvider,
      Provider<ToolbarViewModel> toolbarVMProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.viewModelProvider = viewModelProvider;
    this.sharedViewModelProvider = sharedViewModelProvider;
    this.toolbarVMProvider = toolbarVMProvider;
  }

  public static MembersInjector<MainFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<MainViewModel> viewModelProvider,
      Provider<ViewModelProvider> sharedViewModelProvider,
      Provider<ToolbarViewModel> toolbarVMProvider) {
    return new MainFragment_MembersInjector(androidInjectorProvider, viewModelFactoryProvider, viewModelProvider, sharedViewModelProvider, toolbarVMProvider);
  }

  @Override
  public void injectMembers(MainFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectViewModel(instance, viewModelProvider.get());
    injectSharedViewModelProvider(instance, sharedViewModelProvider.get());
    injectToolbarVM(instance, toolbarVMProvider.get());
  }

  @InjectedFieldSignature("dev.chu.custom_gallery.ui.main.MainFragment.viewModelFactory")
  public static void injectViewModelFactory(MainFragment instance,
      ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }

  @InjectedFieldSignature("dev.chu.custom_gallery.ui.main.MainFragment.viewModel")
  @ViewModelInject
  public static void injectViewModel(MainFragment instance, MainViewModel viewModel) {
    instance.viewModel = viewModel;
  }

  @InjectedFieldSignature("dev.chu.custom_gallery.ui.main.MainFragment.sharedViewModelProvider")
  @SharedViewModelProvider
  public static void injectSharedViewModelProvider(MainFragment instance,
      ViewModelProvider sharedViewModelProvider) {
    instance.sharedViewModelProvider = sharedViewModelProvider;
  }

  @InjectedFieldSignature("dev.chu.custom_gallery.ui.main.MainFragment.toolbarVM")
  public static void injectToolbarVM(MainFragment instance, ToolbarViewModel toolbarVM) {
    instance.toolbarVM = toolbarVM;
  }
}
